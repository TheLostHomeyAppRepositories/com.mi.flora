{
  "never_updated": "никогда",
  "pair": {
    "title": "Поиск устройств",
    "info": {
      "title": "Имейте в виду:",
      "row1": "Для оптимального уровня сигнала держите сенсор поближе к Homey.",
      "row2": "Всегда скачивайте оригинальное приложение `Xiaomi Mi Flora` и добавляйте устройства в приложение. Это автоматически обновляет прошивку сенсора до последней версии."
    },
    "faq": {
      "title": "Часто задаваемые вопросы:",
      "question1": "Почему Homey не может найти датчик?",
      "answer1": "Проверьте, не подключен ли датчик к другому устройству Bluetooth, например, к приложению `Xiaomi Mi Flora`."
    },
    "configure": "Поиск устройств",
    "error": {
      "ble-unavailable": "Ble недоступен: в настоящее время идет синхронизация устройств."
    }
  },
  "settings": {
    "title": "Настройки Xiaomi Mi Flora",
    "update": "Обновить настройки",
    "interval": {
      "label": "Интервал между обновлениями в минутах",
      "info": "Задержка между считыванием значений сенсора в минутах. Минимальный интервал — 5 минут. Интервал по умолчанию — 15 минут."
    },
    "save": {
      "label": "Сохранить"
    },
    "success": "Настройки сохранены",
    "error": {
      "threshold": "Минимальный и максимальный порог для `__capability__` недействителен."
    }
  },
  "capability": {
    "measure_temperature": {
      "name": "температура",
      "suffix": " °C",
      "changed": "Температура изменена на: __value__°C.",
      "device_changed": "Температура `__plant__` изменена на: __value__°C.",
      "device_updated": "Температура `__plant__` обновлена до: __value__°C.",
      "threshold": {
        "min": "Температура (__value__°C) `__plant__` слишком низкая. Она должна быть не менее __min__°C.",
        "max": "Температура (__value__°C) `__plant__` слишком высокая. Она должна быть не более __max__°C."
      }
    },
    "measure_luminance": {
      "name": "солнечный свет",
      "suffix": " lx",
      "changed": "Солнечный свет изменён на: __value__ lx.",
      "device_changed": "Солнечный свет `__plant__` изменён на: __value__ lx.",
      "device_updated": "Солнечный свет `__plant__` обновлён до: __value__ lx.",
      "threshold": {
        "min": "Солнечный свет (__value__ lx) `__plant__` слишком низкий. Он должен быть не менее __min__ lx.",
        "max": "Солнечный свет (__value__ lx) `__plant__` слишком высокий. Он должен быть не более __max__ lx."
      }
    },
    "measure_nutrition": {
      "name": "питание",
      "suffix": " µS/см",
      "changed": "Питание изменено на: __value__ µS/см.",
      "device_changed": "Питание `__plant__` изменено на: __value__ µS/см.",
      "device_updated": "Питание `__plant__` обновлено до: __value__ µS/см.",
      "threshold": {
        "min": "Питание (__value__ µS/см) `__plant__` слишком низкое. Оно должно быть не менее __min__ µS/см.",
        "max": "Питание (__value__ µS/см) `__plant__` слишком высокое. Оно должно быть не более __max__ µS/см."
      }
    },
    "measure_moisture": {
      "name": "влажность",
      "suffix": " %",
      "changed": "Влажность изменена на: __value__%.",
      "device_changed": "Влажность `__plant__` изменена на: __value__%.",
      "device_updated": "Влажность `__plant__` обновлена до: __value__%.",
      "threshold": {
        "min": "Влажность (__value__%) `__plant__` слишком низкая. Она должна быть не менее __min__%.",
        "max": "Влажность (__value__%) `__plant__` слишком высокая. Она должна быть не более __max__%."
      }
    },
    "measure_battery": {
      "name": "батарея",
      "changed": "Заряд батареи изменён на: __value__%.",
      "device_changed": "Заряд батареи `__plant__` изменён на: __value__%.",
      "device_updated": "Заряд батареи `__plant__` обновлён до: __value__%.",
      "threshold": {
        "min": "Заряд батареи (__value__%) `__plant__` слишком низкий. Он должен быть не менее __min__%.",
        "max": "Заряд батареи (__value__%) `__plant__` слишком высокий. Он должен быть не более __max__%."
      }
    }
  }
}
